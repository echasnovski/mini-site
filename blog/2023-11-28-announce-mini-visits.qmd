---
title: "Announcing 'mini.visits'"
author: Evgeni Chasnovski
date: 2023-11-28
categories: [announce, reddit]
description: Track and reuse file system visits. Basically, parts of 'telescope-frecency.nvim' combined with parts of 'harpoon.nvim'
---

*Originally [posted on Reddit](https://www.reddit.com/r/neovim/comments/185yi7q/minivisits_track_and_reuse_file_system_visits/)*

{{< video 2023-11-28-announce-mini-visits/demo.mp4 >}}

Hello, Neovim users!

It is my pleasure to bring you [mini.visits](https://github.com/nvim-mini/mini.nvim/blob/main/readmes/mini-visits.md) - new module of [mini.nvim](https://github.com/nvim-mini/mini.nvim) which can track and reuse file system visits. It can also be installed using [separate GitHub repository](https://github.com/nvim-mini/mini.visits).

**Note**: This demo uses custom `vim.ui.select()` from [mini.pick](https://github.com/nvim-mini/mini.nvim/blob/main/readmes/mini-pick.md).

------

TL;DR: This is a 'mini.nvim' version of a combination of [nvim-telescope/telescope-frecency.nvim](https://github.com/nvim-telescope/telescope-frecency.nvim) (persistently track file visits and select from them) and [ThePrimeagen/harpoon](https://github.com/ThePrimeagen/harpoon) (persistently add/remove labels to paths and select based on them).

**But** there is no feature parity with any of them (and is not planned), as the overall design and assumed workflows are slightly different. Here is a [link to a more detailed comparisons](https://github.com/nvim-mini/mini.nvim/blob/964fab7fecd14f66a69a96162f8aa816480690fd/doc/mini-visits.txt#L64).

------

Features:

- Persistently track file system visits (both files and directories) per project directory. Store visit index is human readable and editable.

- Visit index is normalized on every write to contain relevant information. Exact details can be customized.

- Built-in ability to persistently use label paths for later use.

- Exported functions to reuse visit data:
    - List visited paths/labels with custom filter and sort (uses "robust frecency" by default). Can be used as source for pickers.

    - Select visited paths/labels using `vim.ui.select()`.

    - Iterate through visit paths in target direction ("forward", "backward", "first", "last").

- Exported functions to manually update visit index allowing persistent track of any user information.

For more information, see these tags in help file:

- [`*MiniVisits-overview*`](https://github.com/nvim-mini/mini.nvim/blob/964fab7fecd14f66a69a96162f8aa816480690fd/doc/mini-visits.txt#L105)
- [`*MiniVisits-index-specification*`](https://github.com/nvim-mini/mini.nvim/blob/964fab7fecd14f66a69a96162f8aa816480690fd/doc/mini-visits.txt#L162)
- [`*MiniVisits-examples*`](https://github.com/nvim-mini/mini.nvim/blob/964fab7fecd14f66a69a96162f8aa816480690fd/doc/mini-visits.txt#L225)

For full documentation see [help file](https://github.com/nvim-mini/mini.nvim/blob/main/doc/mini-visits.txt).

------

There are also two new 'mini.pick' pickers for [mini.extra](2023-11-02-announce-mini-extra.qmd): [`visit_paths()`](https://github.com/nvim-mini/mini.nvim/blob/964fab7fecd14f66a69a96162f8aa816480690fd/doc/mini-extra.txt#L731) and [`visit_labels()`](https://github.com/nvim-mini/mini.nvim/blob/964fab7fecd14f66a69a96162f8aa816480690fd/doc/mini-extra.txt#L766). These are essentially a slightly polished alternatives (with file icons, preview, etc.) to built-in pickers which use `vim.ui.select()`.

------

Please, check it out and tell me what you think! You can leave your suggestions either here in comments or in [dedicated beta-testing issue](https://github.com/nvim-mini/mini.nvim/issues/591).

Thanks!
