---
title: "mini.cursorword documentation"
---

_Generated from the `main` branch of 'mini.nvim'_

<a name="mini.cursorword" href="mini-cursorword.qmd#mini.cursorword"><b>mini.cursorword</b></a> Autohighlight word under cursor

MIT License Copyright (c) 2021 Evgeni Chasnovski

---

### Module {#module .help-syntax-right-anchor}

Features:

- Autohighlight word under cursor with customizable delay.


- Current word under cursor can be highlighted differently.


- Highlighting is triggered only if current cursor character is a [[:keyword:]](https://neovim.io/doc/user/helptag.html?tag=[:keyword:]).


- Highlighting stops in insert and terminal modes.


- "Word under cursor" is meant as in Vim's [<span class="help-syntax-keys">\<cword\></span>](https://neovim.io/doc/user/helptag.html?tag=<cword>): something user would
  get as 'iw' text object.

#### Setup {#module-setup}


This module needs a setup with `require('mini.cursorword').setup({})`
(replace `{}` with your `config` table). It will create global Lua table
`MiniCursorword` which you can use for scripting or manually (with
`:lua MiniCursorword.*`).

See [MiniCursorword.config](mini-cursorword.qmd#minicursorword.config) for `config` structure and default values.

You can override runtime config settings locally to buffer inside
`vim.b.minicursorword_config` which should have same structure as
`MiniCursorword.config`. See [mini.nvim-buffer-local-config](mini-nvim.qmd#mini.nvim-buffer-local-config) for more details.

#### Highlight groups {#module-highlightgroups}



- `MiniCursorword` - highlight group of a non-current cursor word.
  Default: plain underline.


- `MiniCursorwordCurrent` - highlight group of a current word under cursor.
  Default: links to `MiniCursorword` (so `:hi clear MiniCursorwordCurrent`
  will lead to showing `MiniCursorword` highlight group).
  Note: To not highlight it, use the following Lua code:

  ```lua
  vim.api.nvim_set_hl(0, 'MiniCursorwordCurrent', {})
  ```

To change any highlight group, set it directly with [nvim\_set\_hl()](https://neovim.io/doc/user/helptag.html?tag=nvim_set_hl\(\)).

#### Disabling {#module-disabling}


To disable core functionality, set `vim.g.minicursorword_disable` (globally) or
`vim.b.minicursorword_disable` (for a buffer) to `true`. Considering high
number of different scenarios and customization intentions, writing exact
rules for disabling module's functionality is left to user. See
[mini.nvim-disabling-recipes](mini-nvim.qmd#mini.nvim-disabling-recipes) for common recipes. Note: after disabling
there might be highlighting left; it will be removed after next
highlighting update.

Module-specific disabling:

- Don't show highlighting if cursor is on the word that is in a blocklist
  of current filetype. In this example, blocklist for "lua" is "local" and
  "require" words, for "javascript" - "import":

  ```lua
  _G.cursorword_blocklist = function()
    local curword = vim.fn.expand('<cword>')
    local filetype = vim.bo.filetype

    -- Add any disabling global or filetype-specific logic here
    local blocklist = {}
    if filetype == 'lua' then
      blocklist = { 'local', 'require' }
    elseif filetype == 'javascript' then
      blocklist = { 'import' }
    end

    vim.b.minicursorword_disable = vim.tbl_contains(blocklist, curword)
  end

  -- Make sure to add this autocommand *before* calling module's `setup()`.
  vim.cmd('au CursorMoved * lua _G.cursorword_blocklist()')
  ```

---

### setup() {#minicursorword.setup .help-syntax-right-anchor}

<p align="center">`MiniCursorword.setup`(<span class="help-syntax-special">{config}</span>)</p>
Module setup

#### Parameters {#minicursorword.setup-parameters}



<span class="help-syntax-special">{config}</span> `(table|nil)` Module config table. See [MiniCursorword.config](mini-cursorword.qmd#minicursorword.config).

#### Usage {#minicursorword.setup-usage}



  ```lua
  require('mini.cursorword').setup() -- use default config
  -- OR
  require('mini.cursorword').setup({}) -- replace {} with your config table
  ```

---

### config {#minicursorword.config .help-syntax-right-anchor}

<p align="center">`MiniCursorword.config`</p>
#### Defaults {#minicursorword.config-defaults}



  ```lua
  MiniCursorword.config = {
    -- Delay (in ms) between when cursor moved and when highlighting appeared
    delay = 100,
  }
  ```

